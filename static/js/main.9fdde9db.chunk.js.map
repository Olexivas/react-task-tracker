{"version":3,"sources":["components/About.js","components/AddTask.js","components/Footer.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["About","to","AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","action","className","onSubmit","event","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","Footer","Button","color","onClick","style","backgroundColor","defaultProps","Header","title","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fdde9db.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to=\"/\">Go back</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form action=\"\" className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"\">Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(event) => setText(event.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"\">Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(event) => setDay(event.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label htmlFor=\"\">Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(event) =>\r\n            setReminder(event.currentTarget.checked)\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Save Task\"\r\n        className=\"btn btn-block\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to=\"/about\">About</Link>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{\r\n        backgroundColor: color,\r\n      }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      {location.pathname === \"/\" && (\r\n        <Button\r\n          color={showAdd ? \"red\" : \"green\"}\r\n          text={showAdd ? \"Close\" : \"Add\"}\r\n          onClick={onAdd}\r\n        />\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = { title: \"Task Tracker\" };\r\n\r\nHeader.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{\r\n            color: \"red\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport About from \"./components/About\";\n\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder,\n    };\n\n    const res = await fetch(\n      `http://localhost:5000/tasks/${id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Conteny-typ\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      }\n    );\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id\n          ? { ...task, reminder: !task.data.reminder }\n          : task\n      )\n    );\n  };\n\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                \"No Tasks To Show\"\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}